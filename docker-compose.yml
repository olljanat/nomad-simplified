services:
  nomad:
    image: ghcr.io/olljanat/nomad-simplified:${VERSION}
    container_name: nomad${NOMAD_NODE_NUM}
    hostname: nomad${NOMAD_NODE_NUM}
    command: nomad agent -server -config=/etc/nomad.d -config=/etc/nomad.d/role/server.hcl -bind=${NODE_IP} -region=${REGION} -dc=${DATACENTER}
    # entrypoint: /bin/client-entry.sh
    # command: nomad agent -client -config=/etc/nomad.d -config=/etc/nomad.d/role/client.hcl -region=${REGION} -dc=${DATACENTER} -node-pool=${NODE_POOL}
    environment:
      NODE_IP: ${NODE_IP}
      SERVER1: ${SERVER1}
      SERVER2: ${SERVER2}
      SERVER3: ${SERVER3}
    network_mode: host
    uts: host
    pid: host
    ipc: host
    privileged: true
    restart: always

    # Trigger graceful shutdown with SIGINT which Nomad agent is listening
    # and give it 5 minutes handle active connections before killing container
    stop_grace_period: 5m
    stop_signal: SIGINT

    volumes:
    - nomad:/opt/nomad
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - ./tls:/opt/tls:ro

  coredns:
    image: ghcr.io/olljanat/nomad-simplified:${VERSION}
    container_name: nomad${NOMAD_NODE_NUM}-coredns
    command: coredns -conf /etc/coredns/Corefile
    environment:
      NOMAD_TOKEN: ${COREDNS_NOMAD_TOKEN}
      NOMAD_SKIP_VERIFY: "true"
      SERVER1: ${SERVER1}
      SERVER2: ${SERVER2}
      SERVER3: ${SERVER3}
      DOMAIN: service.nomad
    network_mode: host
    uts: host
    pid: host
    ipc: host
    privileged: true
    restart: always

volumes:
  nomad:
    name: nomad
    driver: local
